from scipy.stats import pearsonr
import numpy as np

#超前滞后相关
#负轴表示data1超前data2，即2滞后1
def leadlagcor(data1,data2,n):
	#data1和data2为两个时间序列，n设置做多少个时间步长的超前滞后
    a=-n
    b=-a
    c=b*2+1
    x=np.arange(-n,n+1,1)
    r=np.zeros((c,1))
    p=np.zeros((c,1))

    for i in range(c):
        if i<(b):
            r[n-i],p[n-i]=pearsonr(data1[:(len(data1)-i)], data2[i:])
        else:
            r[i],p[i]=pearsonr(data1[x[i]:], data2[:len(data1)-x[i]])
    return r
#调用上面自定义的函数，输入data1和data2，和n~    
leadlagcor(data1=[-33.36545,-33.92636,-34.34225,-34.61312,-34.73896,-34.94459,-34.25714,-33.80779,-33.1961,-34.09091,-34.25195,-33.41385,-34.18571,-34.37922,-33.40043,-32.57532,-32.59264,-32.67662,-30.55758,-29.21082,-29.7381,-29.21082,-29.51385,-32.171,-34.37706,-34.74675,-34.7684,-34.40563,-33.76667,-31.50952,-29.94242,-30.62944,-30.58788,-30.70563,-31.51991,-32.15801,-32.19597,-32.03654,-31.6797,-31.12545
],data2=[-33.63396667,-33.25132333,-33.02919333,-32.96757333,-33.06647333,-33.36220333,-33.47777667,-33.45144333,-34.46239333,-34.53889667,-34.50354667,-33.56232667,-32.93023667,-32.94987,-32.71911,-32.73420333,-32.48041667,-32.25383667,-32.04518,-32.38467667,-32.23009,-32.34517667,-32.42504333,-32.16040667,-30.80071667,-30.38494,-29.6921,-31.05099,-32.05093333,-33.28739667,-33.46136333,-32.90484333,-31.96005667,-31.58915667,-30.76188333,-31.04420333,-30.99454,-30.96901,-30.96761,-30.99034333
],n=38)


leadlagcor_plot(data1=[-33.36545,-33.92636,-34.34225,-34.61312,-34.73896,-34.94459,-34.25714,-33.80779,-33.1961,-34.09091,-34.25195,-33.41385,-34.18571,-34.37922,-33.40043,-32.57532,-32.59264,-32.67662,-30.55758,-29.21082,-29.7381,-29.21082,-29.51385,-32.171,-34.37706,-34.74675,-34.7684,-34.40563,-33.76667,-31.50952,-29.94242,-30.62944,-30.58788,-30.70563,-31.51991,-32.15801,-32.19597,-32.03654,-31.6797,-31.12545
],data2=[-33.63396667,-33.25132333,-33.02919333,-32.96757333,-33.06647333,-33.36220333,-33.47777667,-33.45144333,-34.46239333,-34.53889667,-34.50354667,-33.56232667,-32.93023667,-32.94987,-32.71911,-32.73420333,-32.48041667,-32.25383667,-32.04518,-32.38467667,-32.23009,-32.34517667,-32.42504333,-32.16040667,-30.80071667,-30.38494,-29.6921,-31.05099,-32.05093333,-33.28739667,-33.46136333,-32.90484333,-31.96005667,-31.58915667,-30.76188333,-31.04420333,-30.99454,-30.96901,-30.96761,-30.99034333
],n=38)
